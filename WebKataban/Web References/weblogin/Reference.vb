'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace weblogin
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="LoginCheckSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LoginCheck
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetUserIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckLoginTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateLoginTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckMacaddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckAuthenticationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMacAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PutMacAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EncodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DecodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WebKataban.My.MySettings.Default.WebKataban_weblogin_LoginCheck
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetUserIDCompleted As GetUserIDCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckLoginTimeCompleted As CheckLoginTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateLoginTimeCompleted As UpdateLoginTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckMacaddressCompleted As CheckMacaddressCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckAuthenticationCompleted As CheckAuthenticationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMacAddressCompleted As GetMacAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event PutMacAddressCompleted As PutMacAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event EncodeCompleted As EncodeCompletedEventHandler
        
        '''<remarks/>
        Public Event DecodeCompleted As DecodeCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserID(ByVal strUserID As String, ByVal strPassword As String) As Boolean
            Dim results() As Object = Me.Invoke("GetUserID", New Object() {strUserID, strPassword})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserIDAsync(ByVal strUserID As String, ByVal strPassword As String)
            Me.GetUserIDAsync(strUserID, strPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserIDAsync(ByVal strUserID As String, ByVal strPassword As String, ByVal userState As Object)
            If (Me.GetUserIDOperationCompleted Is Nothing) Then
                Me.GetUserIDOperationCompleted = AddressOf Me.OnGetUserIDOperationCompleted
            End If
            Me.InvokeAsync("GetUserID", New Object() {strUserID, strPassword}, Me.GetUserIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserIDCompleted(Me, New GetUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLoginTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckLoginTime(ByVal strUserID As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckLoginTime", New Object() {strUserID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckLoginTimeAsync(ByVal strUserID As String)
            Me.CheckLoginTimeAsync(strUserID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckLoginTimeAsync(ByVal strUserID As String, ByVal userState As Object)
            If (Me.CheckLoginTimeOperationCompleted Is Nothing) Then
                Me.CheckLoginTimeOperationCompleted = AddressOf Me.OnCheckLoginTimeOperationCompleted
            End If
            Me.InvokeAsync("CheckLoginTime", New Object() {strUserID}, Me.CheckLoginTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckLoginTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckLoginTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckLoginTimeCompleted(Me, New CheckLoginTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLoginTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateLoginTime(ByVal strUserID As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateLoginTime", New Object() {strUserID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateLoginTimeAsync(ByVal strUserID As String)
            Me.UpdateLoginTimeAsync(strUserID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateLoginTimeAsync(ByVal strUserID As String, ByVal userState As Object)
            If (Me.UpdateLoginTimeOperationCompleted Is Nothing) Then
                Me.UpdateLoginTimeOperationCompleted = AddressOf Me.OnUpdateLoginTimeOperationCompleted
            End If
            Me.InvokeAsync("UpdateLoginTime", New Object() {strUserID}, Me.UpdateLoginTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateLoginTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateLoginTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateLoginTimeCompleted(Me, New UpdateLoginTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckMacaddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckMacaddress(ByVal strUserID As String, ByVal strPassword As String, ByVal strMacaddress As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckMacaddress", New Object() {strUserID, strPassword, strMacaddress})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckMacaddressAsync(ByVal strUserID As String, ByVal strPassword As String, ByVal strMacaddress As String)
            Me.CheckMacaddressAsync(strUserID, strPassword, strMacaddress, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckMacaddressAsync(ByVal strUserID As String, ByVal strPassword As String, ByVal strMacaddress As String, ByVal userState As Object)
            If (Me.CheckMacaddressOperationCompleted Is Nothing) Then
                Me.CheckMacaddressOperationCompleted = AddressOf Me.OnCheckMacaddressOperationCompleted
            End If
            Me.InvokeAsync("CheckMacaddress", New Object() {strUserID, strPassword, strMacaddress}, Me.CheckMacaddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckMacaddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckMacaddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckMacaddressCompleted(Me, New CheckMacaddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckAuthentication", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckAuthentication(ByVal strUserID As String, ByVal strPassword As String, ByVal strMacaddress As String, ByVal strSerialNo As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckAuthentication", New Object() {strUserID, strPassword, strMacaddress, strSerialNo})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckAuthenticationAsync(ByVal strUserID As String, ByVal strPassword As String, ByVal strMacaddress As String, ByVal strSerialNo As String)
            Me.CheckAuthenticationAsync(strUserID, strPassword, strMacaddress, strSerialNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckAuthenticationAsync(ByVal strUserID As String, ByVal strPassword As String, ByVal strMacaddress As String, ByVal strSerialNo As String, ByVal userState As Object)
            If (Me.CheckAuthenticationOperationCompleted Is Nothing) Then
                Me.CheckAuthenticationOperationCompleted = AddressOf Me.OnCheckAuthenticationOperationCompleted
            End If
            Me.InvokeAsync("CheckAuthentication", New Object() {strUserID, strPassword, strMacaddress, strSerialNo}, Me.CheckAuthenticationOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckAuthenticationOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckAuthenticationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckAuthenticationCompleted(Me, New CheckAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMacAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMacAddress(ByVal strUserID As String, ByVal strPassword As String) As String
            Dim results() As Object = Me.Invoke("GetMacAddress", New Object() {strUserID, strPassword})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMacAddressAsync(ByVal strUserID As String, ByVal strPassword As String)
            Me.GetMacAddressAsync(strUserID, strPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMacAddressAsync(ByVal strUserID As String, ByVal strPassword As String, ByVal userState As Object)
            If (Me.GetMacAddressOperationCompleted Is Nothing) Then
                Me.GetMacAddressOperationCompleted = AddressOf Me.OnGetMacAddressOperationCompleted
            End If
            Me.InvokeAsync("GetMacAddress", New Object() {strUserID, strPassword}, Me.GetMacAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMacAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMacAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMacAddressCompleted(Me, New GetMacAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PutMacAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PutMacAddress(ByVal strUserID As String, ByVal strPassword As String, ByVal strMacAddress As String) As Integer
            Dim results() As Object = Me.Invoke("PutMacAddress", New Object() {strUserID, strPassword, strMacAddress})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PutMacAddressAsync(ByVal strUserID As String, ByVal strPassword As String, ByVal strMacAddress As String)
            Me.PutMacAddressAsync(strUserID, strPassword, strMacAddress, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PutMacAddressAsync(ByVal strUserID As String, ByVal strPassword As String, ByVal strMacAddress As String, ByVal userState As Object)
            If (Me.PutMacAddressOperationCompleted Is Nothing) Then
                Me.PutMacAddressOperationCompleted = AddressOf Me.OnPutMacAddressOperationCompleted
            End If
            Me.InvokeAsync("PutMacAddress", New Object() {strUserID, strPassword, strMacAddress}, Me.PutMacAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnPutMacAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.PutMacAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PutMacAddressCompleted(Me, New PutMacAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Encode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Encode(ByVal strPlainText As String) As String
            Dim results() As Object = Me.Invoke("Encode", New Object() {strPlainText})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EncodeAsync(ByVal strPlainText As String)
            Me.EncodeAsync(strPlainText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EncodeAsync(ByVal strPlainText As String, ByVal userState As Object)
            If (Me.EncodeOperationCompleted Is Nothing) Then
                Me.EncodeOperationCompleted = AddressOf Me.OnEncodeOperationCompleted
            End If
            Me.InvokeAsync("Encode", New Object() {strPlainText}, Me.EncodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnEncodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.EncodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EncodeCompleted(Me, New EncodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Decode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Decode(ByVal strCipherText As String) As String
            Dim results() As Object = Me.Invoke("Decode", New Object() {strCipherText})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DecodeAsync(ByVal strCipherText As String)
            Me.DecodeAsync(strCipherText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DecodeAsync(ByVal strCipherText As String, ByVal userState As Object)
            If (Me.DecodeOperationCompleted Is Nothing) Then
                Me.DecodeOperationCompleted = AddressOf Me.OnDecodeOperationCompleted
            End If
            Me.InvokeAsync("Decode", New Object() {strCipherText}, Me.DecodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnDecodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.DecodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DecodeCompleted(Me, New DecodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetUserIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CheckLoginTimeCompletedEventHandler(ByVal sender As Object, ByVal e As CheckLoginTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckLoginTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub UpdateLoginTimeCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateLoginTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateLoginTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CheckMacaddressCompletedEventHandler(ByVal sender As Object, ByVal e As CheckMacaddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckMacaddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CheckAuthenticationCompletedEventHandler(ByVal sender As Object, ByVal e As CheckAuthenticationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckAuthenticationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetMacAddressCompletedEventHandler(ByVal sender As Object, ByVal e As GetMacAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMacAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub PutMacAddressCompletedEventHandler(ByVal sender As Object, ByVal e As PutMacAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PutMacAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EncodeCompletedEventHandler(ByVal sender As Object, ByVal e As EncodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EncodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub DecodeCompletedEventHandler(ByVal sender As Object, ByVal e As DecodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DecodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
